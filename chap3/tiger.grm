%%
%term
    EOF
  | ID of string
  | INT of int | STRING of string
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK
  | LBRACE | RBRACE | DOT
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF
  | BREAK | NIL
  | FUNCTION | VAR | TYPE

%nonterm  exp | program
        | decs | dec
        | tydec | vardec | fundec
        | ty | tyfield | tyfields | tyfields_list

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE
	DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%%

program	: exp				()


exp: 			()



(* ------------------------------------------------------------------------ *)
(* Declarations *)

decs :          ()
     | decs dec ()

dec : tydec ()
    | vardec ()
    | fundec ()

tydec : TYPE ID EQ ty ()

ty : ID                     ()
   | LBRACE tyfields RBRACE ()
   | ARRAY OF ID            ()

tyfield : ID COLON ID ()

tyfields :                        ()
         | tyfields_list          ()

tyfields_list : tyfield                     ()
              | tyfields_list COMMA tyfield ()

vardec : VAR ID ASSIGN exp          ()
       | VAR ID COLON ID ASSIGN exp ()

fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp ()
       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp ()
