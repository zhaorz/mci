1 shift/reduce conflict

error:  state 19: shift/reduce conflict (shift LBRACK, reduce by rule 19)

state 0:

	program : . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 8
	program	goto 141
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 1:

	exp : assign_exp .  (reduce by rule 36)



	.	reduce by rule 36


state 2:

	exp : array_creation .  (reduce by rule 35)



	.	reduce by rule 35


state 3:

	exp : record_creation .  (reduce by rule 34)



	.	reduce by rule 34


state 4:

	exp : bool_exp .  (reduce by rule 33)



	.	reduce by rule 33


state 5:

	exp : cmp_exp .  (reduce by rule 32)



	.	reduce by rule 32


state 6:

	exp : arith_exp .  (reduce by rule 31)



	.	reduce by rule 31


state 7:

	exp : lvalue .  (reduce by rule 23)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 
	assign_exp : lvalue . ASSIGN exp 

	LBRACK	shift 22
	DOT	shift 21
	ASSIGN	shift 20


	.	reduce by rule 23


state 8:

	program : exp .  (reduce by rule 0)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 0


state 9:

	exp : NIL .  (reduce by rule 24)



	.	reduce by rule 24


state 10:

	exp : BREAK .  (reduce by rule 41)



	.	reduce by rule 41


state 11:

	exp : LET . decs IN expseq END 
	exp : LET . decs IN END 


	decs	goto 35

	.	reduce by rule 1


state 12:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 36


	.	error


state 13:

	exp : WHILE . exp DO exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 37
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 14:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 38
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 15:

	exp : MINUS . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 39
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 16:

	exp : LPAREN . RPAREN 
	exp : LPAREN . expseq RPAREN 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	RPAREN	shift 42
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 41
	lvalue	goto 7
	expseq	goto 40
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 17:

	exp : STRING .  (reduce by rule 28)



	.	reduce by rule 28


state 18:

	exp : INT .  (reduce by rule 27)



	.	reduce by rule 27

error:  state 19: shift/reduce conflict (shift LBRACK, reduce by rule 19)

state 19:

	exp : ID . LPAREN args RPAREN 
	lvalue : ID .  (reduce by rule 19)
	lvalue : ID . LBRACK exp RBRACK 
	record_creation : ID . LBRACE field_list RBRACE 
	array_creation : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 45
	LBRACK	shift 44
	LBRACE	shift 43


	.	reduce by rule 19


state 20:

	assign_exp : lvalue ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 46
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 21:

	lvalue : lvalue DOT . ID 

	ID	shift 47


	.	error


state 22:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 48
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 23:

	bool_exp : exp OR . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 49
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 24:

	bool_exp : exp AND . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 50
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 25:

	cmp_exp : exp GE . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 51
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 26:

	cmp_exp : exp GT . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 52
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 27:

	cmp_exp : exp LE . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 53
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 28:

	cmp_exp : exp LT . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 54
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 29:

	cmp_exp : exp NEQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 55
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 30:

	cmp_exp : exp EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 56
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 31:

	arith_exp : exp DIVIDE . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 57
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 32:

	arith_exp : exp TIMES . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 58
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 33:

	arith_exp : exp MINUS . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 59
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 34:

	arith_exp : exp PLUS . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 60
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 35:

	exp : LET decs . IN expseq END 
	exp : LET decs . IN END 
	decs : decs . dec 

	IN	shift 68
	FUNCTION	shift 67
	VAR	shift 66
	TYPE	shift 65

	dec	goto 64
	tydec	goto 63
	vardec	goto 62
	fundec	goto 61

	.	error


state 36:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 69


	.	error


state 37:

	exp : WHILE exp . DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	DO	shift 70


	.	error


state 38:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	THEN	shift 71


	.	error


state 39:

	exp : MINUS exp .  (reduce by rule 29)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 29


state 40:

	exp : LPAREN expseq . RPAREN 
	expseq : expseq . SEMICOLON exp 

	SEMICOLON	shift 73
	RPAREN	shift 72


	.	error


state 41:

	expseq : exp .  (reduce by rule 66)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 66


state 42:

	exp : LPAREN RPAREN .  (reduce by rule 25)



	.	reduce by rule 25


state 43:

	record_creation : ID LBRACE . field_list RBRACE 

	ID	shift 77

	field	goto 76
	field_list	goto 75
	field_list_nonempty	goto 74

	.	reduce by rule 58


state 44:

	lvalue : ID LBRACK . exp RBRACK 
	array_creation : ID LBRACK . exp RBRACK OF exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 78
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 45:

	exp : ID LPAREN . args RPAREN 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 81
	lvalue	goto 7
	explist	goto 80
	args	goto 79
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	reduce by rule 64


state 46:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	assign_exp : lvalue ASSIGN exp .  (reduce by rule 63)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 63


state 47:

	lvalue : lvalue DOT ID .  (reduce by rule 20)



	.	reduce by rule 20


state 48:

	lvalue : lvalue LBRACK exp . RBRACK 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	RBRACK	shift 82
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	error


state 49:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	bool_exp : exp OR exp .  (reduce by rule 55)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25


	.	reduce by rule 55


state 50:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp AND exp .  (reduce by rule 54)
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25


	.	reduce by rule 54


state 51:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp GE exp .  (reduce by rule 52)
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 52
	COMMA	reduce by rule 52
	SEMICOLON	reduce by rule 52
	RPAREN	reduce by rule 52
	RBRACK	reduce by rule 52
	RBRACE	reduce by rule 52
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 52
	OR	reduce by rule 52
	THEN	reduce by rule 52
	ELSE	reduce by rule 52
	TO	reduce by rule 52
	DO	reduce by rule 52
	IN	reduce by rule 52
	END	reduce by rule 52
	FUNCTION	reduce by rule 52
	VAR	reduce by rule 52
	TYPE	reduce by rule 52


	.	error


state 52:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	cmp_exp : exp GT exp .  (reduce by rule 53)
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 53
	COMMA	reduce by rule 53
	SEMICOLON	reduce by rule 53
	RPAREN	reduce by rule 53
	RBRACK	reduce by rule 53
	RBRACE	reduce by rule 53
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 53
	OR	reduce by rule 53
	THEN	reduce by rule 53
	ELSE	reduce by rule 53
	TO	reduce by rule 53
	DO	reduce by rule 53
	IN	reduce by rule 53
	END	reduce by rule 53
	FUNCTION	reduce by rule 53
	VAR	reduce by rule 53
	TYPE	reduce by rule 53


	.	error


state 53:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp LE exp .  (reduce by rule 51)
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 51
	COMMA	reduce by rule 51
	SEMICOLON	reduce by rule 51
	RPAREN	reduce by rule 51
	RBRACK	reduce by rule 51
	RBRACE	reduce by rule 51
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 51
	OR	reduce by rule 51
	THEN	reduce by rule 51
	ELSE	reduce by rule 51
	TO	reduce by rule 51
	DO	reduce by rule 51
	IN	reduce by rule 51
	END	reduce by rule 51
	FUNCTION	reduce by rule 51
	VAR	reduce by rule 51
	TYPE	reduce by rule 51


	.	error


state 54:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp LT exp .  (reduce by rule 50)
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 50
	COMMA	reduce by rule 50
	SEMICOLON	reduce by rule 50
	RPAREN	reduce by rule 50
	RBRACK	reduce by rule 50
	RBRACE	reduce by rule 50
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 50
	OR	reduce by rule 50
	THEN	reduce by rule 50
	ELSE	reduce by rule 50
	TO	reduce by rule 50
	DO	reduce by rule 50
	IN	reduce by rule 50
	END	reduce by rule 50
	FUNCTION	reduce by rule 50
	VAR	reduce by rule 50
	TYPE	reduce by rule 50


	.	error


state 55:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp NEQ exp .  (reduce by rule 49)
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 49
	COMMA	reduce by rule 49
	SEMICOLON	reduce by rule 49
	RPAREN	reduce by rule 49
	RBRACK	reduce by rule 49
	RBRACE	reduce by rule 49
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 49
	OR	reduce by rule 49
	THEN	reduce by rule 49
	ELSE	reduce by rule 49
	TO	reduce by rule 49
	DO	reduce by rule 49
	IN	reduce by rule 49
	END	reduce by rule 49
	FUNCTION	reduce by rule 49
	VAR	reduce by rule 49
	TYPE	reduce by rule 49


	.	error


state 56:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp EQ exp .  (reduce by rule 48)
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 48
	COMMA	reduce by rule 48
	SEMICOLON	reduce by rule 48
	RPAREN	reduce by rule 48
	RBRACK	reduce by rule 48
	RBRACE	reduce by rule 48
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	reduce by rule 48
	OR	reduce by rule 48
	THEN	reduce by rule 48
	ELSE	reduce by rule 48
	TO	reduce by rule 48
	DO	reduce by rule 48
	IN	reduce by rule 48
	END	reduce by rule 48
	FUNCTION	reduce by rule 48
	VAR	reduce by rule 48
	TYPE	reduce by rule 48


	.	error


state 57:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	arith_exp : exp DIVIDE exp .  (reduce by rule 47)
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 47


state 58:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp TIMES exp .  (reduce by rule 46)
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 46


state 59:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp MINUS exp .  (reduce by rule 45)
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 45


state 60:

	arith_exp : exp . PLUS exp 
	arith_exp : exp PLUS exp .  (reduce by rule 44)
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 44


state 61:

	dec : fundec .  (reduce by rule 5)



	.	reduce by rule 5


state 62:

	dec : vardec .  (reduce by rule 4)



	.	reduce by rule 4


state 63:

	dec : tydec .  (reduce by rule 3)



	.	reduce by rule 3


state 64:

	decs : decs dec .  (reduce by rule 2)



	.	reduce by rule 2


state 65:

	tydec : TYPE . ID EQ ty 

	ID	shift 83


	.	error


state 66:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 84


	.	error


state 67:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 85


	.	error


state 68:

	exp : LET decs IN . expseq END 
	exp : LET decs IN . END 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	END	shift 87
	BREAK	shift 10
	NIL	shift 9

	exp	goto 41
	lvalue	goto 7
	expseq	goto 86
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 69:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 88
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 70:

	exp : WHILE exp DO . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 89
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 71:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 90
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 72:

	exp : LPAREN expseq RPAREN .  (reduce by rule 26)



	.	reduce by rule 26


state 73:

	expseq : expseq SEMICOLON . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 91
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 74:

	field_list : field_list_nonempty .  (reduce by rule 59)
	field_list_nonempty : field_list_nonempty . COMMA field 

	COMMA	shift 92


	.	reduce by rule 59


state 75:

	record_creation : ID LBRACE field_list . RBRACE 

	RBRACE	shift 93


	.	error


state 76:

	field_list_nonempty : field .  (reduce by rule 60)



	.	reduce by rule 60


state 77:

	field : ID . EQ exp 

	EQ	shift 94


	.	error


state 78:

	lvalue : ID LBRACK exp . RBRACK 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	array_creation : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 95
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	error


state 79:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 96


	.	error


state 80:

	explist : explist . COMMA exp 
	args : explist .  (reduce by rule 65)

	COMMA	shift 97


	.	reduce by rule 65


state 81:

	explist : exp .  (reduce by rule 68)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 68


state 82:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 22)



	.	reduce by rule 22


state 83:

	tydec : TYPE ID . EQ ty 

	EQ	shift 98


	.	error


state 84:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 100
	ASSIGN	shift 99


	.	error


state 85:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 101


	.	error


state 86:

	exp : LET decs IN expseq . END 
	expseq : expseq . SEMICOLON exp 

	SEMICOLON	shift 73
	END	shift 102


	.	error


state 87:

	exp : LET decs IN END .  (reduce by rule 43)



	.	reduce by rule 43


state 88:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	TO	shift 103


	.	error


state 89:

	exp : WHILE exp DO exp .  (reduce by rule 39)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 39


state 90:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 38)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	ELSE	shift 104


	.	reduce by rule 38


state 91:

	expseq : expseq SEMICOLON exp .  (reduce by rule 67)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 67


state 92:

	field_list_nonempty : field_list_nonempty COMMA . field 

	ID	shift 77

	field	goto 105

	.	error


state 93:

	record_creation : ID LBRACE field_list RBRACE .  (reduce by rule 56)



	.	reduce by rule 56


state 94:

	field : ID EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 106
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 95:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 21)
	array_creation : ID LBRACK exp RBRACK . OF exp 

	OF	shift 107


	.	reduce by rule 21


state 96:

	exp : ID LPAREN args RPAREN .  (reduce by rule 30)



	.	reduce by rule 30


state 97:

	explist : explist COMMA . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 108
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 98:

	tydec : TYPE ID EQ . ty 

	ID	shift 112
	LBRACE	shift 111
	ARRAY	shift 110

	ty	goto 109

	.	error


state 99:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 113
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 100:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 114


	.	error


state 101:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 118

	tyfield	goto 117
	tyfields	goto 116
	tyfields_list	goto 115

	.	reduce by rule 11


state 102:

	exp : LET decs IN expseq END .  (reduce by rule 42)



	.	reduce by rule 42


state 103:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 119
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 104:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 120
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 105:

	field_list_nonempty : field_list_nonempty COMMA field .  (reduce by rule 61)



	.	reduce by rule 61


state 106:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	field : ID EQ exp .  (reduce by rule 57)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 57


state 107:

	array_creation : ID LBRACK exp RBRACK OF . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 121
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 108:

	explist : explist COMMA exp .  (reduce by rule 69)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 69


state 109:

	tydec : TYPE ID EQ ty .  (reduce by rule 6)



	.	reduce by rule 6


state 110:

	ty : ARRAY . OF ID 

	OF	shift 122


	.	error


state 111:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 118

	tyfield	goto 117
	tyfields	goto 123
	tyfields_list	goto 115

	.	reduce by rule 11


state 112:

	ty : ID .  (reduce by rule 7)



	.	reduce by rule 7


state 113:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 15)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 15


state 114:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 124


	.	error


state 115:

	tyfields : tyfields_list .  (reduce by rule 12)
	tyfields_list : tyfields_list . COMMA tyfield 

	COMMA	shift 125


	.	reduce by rule 12


state 116:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 126


	.	error


state 117:

	tyfields_list : tyfield .  (reduce by rule 13)



	.	reduce by rule 13


state 118:

	tyfield : ID . COLON ID 

	COLON	shift 127


	.	error


state 119:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	DO	shift 128


	.	error


state 120:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 37)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 37


state 121:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	array_creation : ID LBRACK exp RBRACK OF exp .  (reduce by rule 62)



	.	reduce by rule 62


state 122:

	ty : ARRAY OF . ID 

	ID	shift 129


	.	error


state 123:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 130


	.	error


state 124:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 131
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 125:

	tyfields_list : tyfields_list COMMA . tyfield 

	ID	shift 118

	tyfield	goto 132

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 134
	EQ	shift 133


	.	error


state 127:

	tyfield : ID COLON . ID 

	ID	shift 135


	.	error


state 128:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 136
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 129:

	ty : ARRAY OF ID .  (reduce by rule 9)



	.	reduce by rule 9


state 130:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 8)



	.	reduce by rule 8


state 131:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 16)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 16


state 132:

	tyfields_list : tyfields_list COMMA tyfield .  (reduce by rule 14)



	.	reduce by rule 14


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 137
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 138


	.	error


state 135:

	tyfield : ID COLON ID .  (reduce by rule 10)



	.	reduce by rule 10


state 136:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 40)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 40


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 17)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 17


state 138:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 139


	.	error


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	WHILE	shift 13
	FOR	shift 12
	LET	shift 11
	BREAK	shift 10
	NIL	shift 9

	exp	goto 140
	lvalue	goto 7
	arith_exp	goto 6
	cmp_exp	goto 5
	bool_exp	goto 4
	record_creation	goto 3
	array_creation	goto 2
	assign_exp	goto 1

	.	error


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 18)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	cmp_exp : exp . EQ exp 
	cmp_exp : exp . NEQ exp 
	cmp_exp : exp . LT exp 
	cmp_exp : exp . LE exp 
	cmp_exp : exp . GE exp 
	cmp_exp : exp . GT exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 18


state 141:


	EOF	accept


	.	error

458 of 953 action table entries left after compaction
310 goto table entries
